[{"path":"https://natearoe.github.io/ecositer/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nathan Roe. Author, maintainer.","code":""},{"path":"https://natearoe.github.io/ecositer/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Roe N (2023). ecositer: ecositer: tools analysis, standardization, automation NRCS ecological data. https://github.com/natearoe/ecositer, https://natearoe.github.io/ecositer/.","code":"@Manual{,   title = {ecositer: ecositer: tools for the analysis, standardization, and automation of NRCS ecological data},   author = {Nathan Roe},   year = {2023},   note = {https://github.com/natearoe/ecositer, https://natearoe.github.io/ecositer/}, }"},{"path":"https://natearoe.github.io/ecositer/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ecositer: tools for the analysis, standardization, and automation of NRCS ecological data","text":"Get development version GitHub:","code":"remotes::install_github(\"natearoe/ecositer\", dependencies = FALSE)"},{"path":"https://natearoe.github.io/ecositer/reference/access_example_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Accessing example data — access_example_data","title":"Accessing example data — access_example_data","text":"Accessing example data","code":""},{"path":"https://natearoe.github.io/ecositer/reference/access_example_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Accessing example data — access_example_data","text":"","code":"access_example_data()"},{"path":"https://natearoe.github.io/ecositer/reference/access_example_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Accessing example data — access_example_data","text":"location example data","code":""},{"path":"https://natearoe.github.io/ecositer/reference/access_example_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Accessing example data — access_example_data","text":"","code":"access_example_data() #> [1] \"/home/runner/.cache/R/ecositer/CA792_veg_data.sqlite\""},{"path":"https://natearoe.github.io/ecositer/reference/ecositer-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ecositer: ecositer: tools for the analysis, standardization, and automation of NRCS ecological data — ecositer-package","title":"ecositer: ecositer: tools for the analysis, standardization, and automation of NRCS ecological data — ecositer-package","text":"collection functions Natural Resource Conservation Service (NRCS) ecologists. Many functions build AQP (https://ncss-tech.github.io/AQP/) R packages provide improved functionality ecologists.","code":""},{"path":[]},{"path":"https://natearoe.github.io/ecositer/reference/ecositer-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ecositer: ecositer: tools for the analysis, standardization, and automation of NRCS ecological data — ecositer-package","text":"Maintainer: Nathan Roe nateroe@gmail.com","code":""},{"path":"https://natearoe.github.io/ecositer/reference/formatted_veg_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Create formatted vegetation dataframe — formatted_veg_df","title":"Create formatted vegetation dataframe — formatted_veg_df","text":"Create formatted vegetation dataframe","code":""},{"path":"https://natearoe.github.io/ecositer/reference/formatted_veg_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create formatted vegetation dataframe — formatted_veg_df","text":"","code":"formatted_veg_df(static_location)"},{"path":"https://natearoe.github.io/ecositer/reference/formatted_veg_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create formatted vegetation dataframe — formatted_veg_df","text":"static_location location static NASIS database saved.","code":""},{"path":"https://natearoe.github.io/ecositer/reference/formatted_veg_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create formatted vegetation dataframe — formatted_veg_df","text":"formatted vegetation dataframe suitable analysis","code":""},{"path":"https://natearoe.github.io/ecositer/reference/formatted_veg_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create formatted vegetation dataframe — formatted_veg_df","text":"","code":"my_formatted_veg_df <- formatted_veg_df(static_location = \"C:/Users/Nathan.Roe/Documents/SEKI/CA792_veg_data.sqlite\") #> The legacy packages maptools, rgdal, and rgeos, underpinning the sp package, #> which was just loaded, will retire in October 2023. #> Please refer to R-spatial evolution reports for details, especially #> https://r-spatial.org/r/2023/05/15/evolution4.html. #> It may be desirable to make the sf package available; #> package maintainers should consider adding sf to Suggests:. #> The sp package is now running under evolution status 2 #>      (status 2 uses the sf package in place of rgdal) #> Error: Local NASIS ODBC connection has not been set up. Please see `http://ncss-tech.github.io/AQP/soilDB/setup_local_nasis.html`. head(formatted_veg_df) #>                                                                                                                      #> 1 function (static_location)                                                                                         #> 2 {                                                                                                                  #> 3     veg_data <- soilDB::fetchVegdata(dsn = static_location, SS = FALSE)                                            #> 4     ecosite_data <- soilDB::fetchNASIS(dsn = static_location,                                                      #> 5         from = \"pedons\", SS = FALSE, fill = TRUE, duplicates = TRUE)                                               #> 6     siteiid_with_dup_vegplots <- dplyr::pull(dplyr::filter(dplyr::group_by(unique(dplyr::select(veg_data$vegplot,"},{"path":"https://natearoe.github.io/ecositer/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"https://natearoe.github.io/ecositer/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"https://natearoe.github.io/ecositer/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"https://natearoe.github.io/ecositer/reference/nmds_ecosite.html","id":null,"dir":"Reference","previous_headings":"","what":"Run NMDS on vegetation data — nmds_ecosite","title":"Run NMDS on vegetation data — nmds_ecosite","text":"nmds_ecosite runs NMDS using vegan package. NMDS numerous settings can adjusted, can manipulated arguments function. function intended used quick way producing ordinations. interested optimizing NMDS, please research. minimum, understand stress evaluate stress report results.","code":""},{"path":"https://natearoe.github.io/ecositer/reference/nmds_ecosite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run NMDS on vegetation data — nmds_ecosite","text":"","code":"nmds_ecosite(veg_summary, ecosite, pres_abs, nmds_dim, reduce_species)"},{"path":"https://natearoe.github.io/ecositer/reference/nmds_ecosite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run NMDS on vegetation data — nmds_ecosite","text":"veg_summary veg_summary object ecositer::veg_summary() function saved. ecosite ecosite ecosite(s) want include ordination. interested ordinating multiple ecosites together, concatenate ecosites interest (e.g., c(\"\", \"b\")) pres_abs use TRUE convert data presence/absence. robust option. missing abundance values, presence/absence used. abundance data, use FALSE. nmds_dim specify number dimensions want NMDS. value affect stress considerably. reduce_species NA want remove species. numeric value, interpretted percent, specifying minimum percentage plots species must present remain dataset.","code":""},{"path":"https://natearoe.github.io/ecositer/reference/nmds_ecosite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run NMDS on vegetation data — nmds_ecosite","text":"NMDS object generated using vegan package","code":""},{"path":"https://natearoe.github.io/ecositer/reference/nmds_ecosite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run NMDS on vegetation data — nmds_ecosite","text":"","code":"formatted_veg <- formatted_veg_df(static_location = \"C:/Users/Nathan.Roe/Documents/SEKI/CA792_veg.sqlite\") #> Error: Local NASIS ODBC connection has not been set up. Please see `http://ncss-tech.github.io/AQP/soilDB/setup_local_nasis.html`. my_veg_summary <- ecositer::veg_summary(veg_df = formatted_veg) #> Error in eval(expr, envir, enclos): object 'formatted_veg' not found my_nmds <- ecositer::nmds_ecosite(veg_summary = my_veg_summary, ecosite = \"F022AK100CA\", pres_abs = TRUE, nmds_dim = 2, reduce_species = NA) #> Error in eval(expr, envir, enclos): object 'my_veg_summary' not found"},{"path":"https://natearoe.github.io/ecositer/reference/nmds_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"NMDS plot — nmds_plot","title":"NMDS plot — nmds_plot","text":"nmds_plot produces interactive NMDS object created ecositer::nmds_ecosite. function allows user define several properties, use pres/abs data, number dimensions, whether remove rare species.","code":""},{"path":"https://natearoe.github.io/ecositer/reference/nmds_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NMDS plot — nmds_plot","text":"","code":"nmds_plot(static_location, nmds, veg_summary)"},{"path":"https://natearoe.github.io/ecositer/reference/nmds_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NMDS plot — nmds_plot","text":"static_location path static nasis SQlite. nmds object created ecositer::nmds_ecosite veg_summary objected created ecositer::veg_summary","code":""},{"path":"https://natearoe.github.io/ecositer/reference/nmds_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NMDS plot — nmds_plot","text":"interactive NMDS plot","code":""},{"path":[]},{"path":"https://natearoe.github.io/ecositer/reference/number_plots_by_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of plots by ecosite — number_plots_by_site","title":"Number of plots by ecosite — number_plots_by_site","text":"number_plots_by_ecosite describes number pedons vegplots recorded ecosite. also lists states/phases associated ecosite.","code":""},{"path":"https://natearoe.github.io/ecositer/reference/number_plots_by_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of plots by ecosite — number_plots_by_site","text":"","code":"number_plots_by_site(static_location)"},{"path":"https://natearoe.github.io/ecositer/reference/number_plots_by_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of plots by ecosite — number_plots_by_site","text":"static_location location static NASIS database saved.","code":""},{"path":"https://natearoe.github.io/ecositer/reference/number_plots_by_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of plots by ecosite — number_plots_by_site","text":"dataframe describing number pedons vegplots recorded ecosite","code":""},{"path":"https://natearoe.github.io/ecositer/reference/number_plots_by_site.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Number of plots by ecosite — number_plots_by_site","text":"","code":"example_data <- access_example_data() my_plots_by_site <- number_plots_by_site(static_location = example_data) #> NOTE: some records are missing surface fragment cover #> NOTE: some records are missing surface fragment cover #> Warning: non-standard notation in Munsell value, use getClosestMunsellChip() #> mixing dry colors ... [54 of 4847 horizons] #> mixing moist colors ... [102 of 5407 horizons] #> NOTE: some records are missing rock fragment volume #> NOTE: all records are missing artifact volume #> replacing missing lower horizon depths with top depth + 1cm ... [59 horizons] #> Warning: Horizon top depths contain NA! Check depth logic with aqp::checkHzDepthLogic() #> Warning: Horizon bottom depths contain NA! Check depth logic with aqp::checkHzDepthLogic() #> -> QC: sites without pedons:  #> \tUse `get('sites.missing.pedons', envir=get_soilDB_env())` for site record IDs (siteiid) #> -> QC: duplicate pedons:  #> \tUse `get('dup.pedon.ids', envir=get_soilDB_env())` for pedon record IDs (peiid) #> Warning: cannot set `phiid` as unique pedon horizon key - `NA` introduced by fill=TRUE #> -> QC: pedons missing bottom hz depths: #> \tUse `get('missing.bottom.depths', envir=get_soilDB_env())` for pedon record IDs (peiid) #> Joining with `by = join_by(ecosite_simple)` #> Joining with `by = join_by(ecosite_simple)` # specify user-defined location - # my_plots_by_site <- number_plots_by_site(static_location = \"C:/Users/Nathan.Roe/Documents/SEKI/CA792_veg_data.sqlite\") head(my_plots_by_site) #>     ecositeid ecosite_simple pedons vegplots numb_statephases #> 1        <NA>           <NA>    145     1042                1 #> 2 F022AD102CA           D102     67       35                4 #> 3 F022AH102CA           H102     59       26                4 #> 4 F022AD104CA           D104     53       33                2 #> 5 F022AH106CA           H106     38       25                2 #> 6 F022AH101CA           H101     35       19                4 #>                                 statephases #> 1                                        NA #> 2 D102.1.1, D102.1.1P, D102.1.2F, D102.1.3F #> 3 H102.1.4F, H102.1.1, H102.1.2F, H102.1.2A #> 4                       D104.1.1, D104.1.4F #> 5                       H106.1.1, H106.1.3F #> 6 H101.1.2F, H101.1.1, H101.1.3F, H101.1.4F"},{"path":"https://natearoe.github.io/ecositer/reference/pres_abs_conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert normal abundance data to presence/absence — pres_abs_conversion","title":"Convert normal abundance data to presence/absence — pres_abs_conversion","text":"pres_abs_conversion internal function used within nmds_ecosite function. Using presence/absence data allow use data plots abundance data. certain datasets, advantageous feature. used NMDS moderate sized datasets (.e., 100+ plots), found yield similar results abundance data. different small datasets.","code":""},{"path":"https://natearoe.github.io/ecositer/reference/pres_abs_conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert normal abundance data to presence/absence — pres_abs_conversion","text":"","code":"pres_abs_conversion(veg_df)"},{"path":"https://natearoe.github.io/ecositer/reference/pres_abs_conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert normal abundance data to presence/absence — pres_abs_conversion","text":"veg_df vegetation dataframe converted presence/absence.","code":""},{"path":"https://natearoe.github.io/ecositer/reference/pres_abs_conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert normal abundance data to presence/absence — pres_abs_conversion","text":"presence/absence dataframe","code":""},{"path":"https://natearoe.github.io/ecositer/reference/pres_abs_conversion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert normal abundance data to presence/absence — pres_abs_conversion","text":"","code":"my_pres_abs <- pres_abs_conversion(veg_df = ecositer::vegetation_dataframe) #> Error in veg_df %>% dplyr::group_by(vegplotid, plantsciname) %>% dplyr::summarise(sum(akstratumcoverclasspct)) %>%     dplyr::rename(pctcover = `sum(akstratumcoverclasspct)`): could not find function \"%>%\" head(my_pres_abs) #> Error in eval(expr, envir, enclos): object 'my_pres_abs' not found"},{"path":"https://natearoe.github.io/ecositer/reference/scanned_data_organizer.html","id":null,"dir":"Reference","previous_headings":"","what":"Organize scanned datasheets into folders — scanned_data_organizer","title":"Organize scanned datasheets into folders — scanned_data_organizer","text":"scanned_data_organizer tool take scans field data organize folders. process starts scanning datasheets. datasheets can scanned . result single pdf file containing datasheets. function separate pdf file individual sites sampled name new pdfs using site id. folder created site id, within datasheet stored. addition, all_sites folder created pdfs stored together.","code":""},{"path":"https://natearoe.github.io/ecositer/reference/scanned_data_organizer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Organize scanned datasheets into folders — scanned_data_organizer","text":"","code":"scanned_data_organizer(   scanned_data_path,   directory,   year_state_fips,   site_number )"},{"path":"https://natearoe.github.io/ecositer/reference/scanned_data_organizer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Organize scanned datasheets into folders — scanned_data_organizer","text":"scanned_data_path location scanned datasheets directory directory want results stored year_state_fips year, state, fips code site id (e.g., \"2023AK185\") site_number site number example site id 2023AK185401, site_number 401. site_number must manually entered vector unless can extract site_number GPS point names record sites sampled. extract site_number, enter following format: my_site_number <- c(401, 402, 405, 409, 410, 411)","code":""},{"path":"https://natearoe.github.io/ecositer/reference/scanned_data_organizer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Organize scanned datasheets into folders — scanned_data_organizer","text":"result directory folders site, within pdf datasheet named site name. folder containing sites also created.","code":""},{"path":"https://natearoe.github.io/ecositer/reference/scanned_data_organizer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Organize scanned datasheets into folders — scanned_data_organizer","text":"","code":"my_site_number <- c(100, 101, 102, 103, 123, 124, 125) scanned_data_organizer(scanned_data_path = \"S:/NRCS/XEROX SCANS/DOC057.pdf\", directory = \"C:/Users/Nathan.Roe/Documents/Alaska2023/Willow_project\", year_state_fips = \"2023AK185\", site_number = my_site_number) #> Error in normalizePath(path, mustWork = TRUE): path[1]=\"S:/NRCS/XEROX SCANS/DOC057.pdf\": No such file or directory"},{"path":"https://natearoe.github.io/ecositer/reference/sites_in_state_phase.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify siteid(s)/vegplotid(s) in states/phases of STMs — sites_in_state_phase","title":"Identify siteid(s)/vegplotid(s) in states/phases of STMs — sites_in_state_phase","text":"sites_in_state_phase way determining siteids associated ecosite state/phase.","code":""},{"path":"https://natearoe.github.io/ecositer/reference/sites_in_state_phase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify siteid(s)/vegplotid(s) in states/phases of STMs — sites_in_state_phase","text":"","code":"sites_in_state_phase(veg_df)"},{"path":"https://natearoe.github.io/ecositer/reference/sites_in_state_phase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify siteid(s)/vegplotid(s) in states/phases of STMs — sites_in_state_phase","text":"veg_df formatted vegetation dataframe created using formatted_veg_df","code":""},{"path":"https://natearoe.github.io/ecositer/reference/sites_in_state_phase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify siteid(s)/vegplotid(s) in states/phases of STMs — sites_in_state_phase","text":"nested list ecosites - states/phases - siteids associated state/phase","code":""},{"path":"https://natearoe.github.io/ecositer/reference/sites_in_state_phase.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify siteid(s)/vegplotid(s) in states/phases of STMs — sites_in_state_phase","text":"","code":"example_data <- access_example_data() veg_df <- formatted_veg_df(static_location = example_data) #> NOTE: some records are missing surface fragment cover #> NOTE: some records are missing surface fragment cover #> Warning: non-standard notation in Munsell value, use getClosestMunsellChip() #> mixing dry colors ... [54 of 4847 horizons] #> mixing moist colors ... [102 of 5407 horizons] #> NOTE: some records are missing rock fragment volume #> NOTE: all records are missing artifact volume #> replacing missing lower horizon depths with top depth + 1cm ... [59 horizons] #> Warning: Horizon top depths contain NA! Check depth logic with aqp::checkHzDepthLogic() #> Warning: Horizon bottom depths contain NA! Check depth logic with aqp::checkHzDepthLogic() #> -> QC: sites without pedons:  #> \tUse `get('sites.missing.pedons', envir=get_soilDB_env())` for site record IDs (siteiid) #> -> QC: duplicate pedons:  #> \tUse `get('dup.pedon.ids', envir=get_soilDB_env())` for pedon record IDs (peiid) #> Warning: cannot set `phiid` as unique pedon horizon key - `NA` introduced by fill=TRUE #> -> QC: pedons missing bottom hz depths: #> \tUse `get('missing.bottom.depths', envir=get_soilDB_env())` for pedon record IDs (peiid) #> Joining with `by = join_by(siteiid)` #> Joining with `by = join_by(siteiid, vegplotiid)` # user-defined static location - # veg_df <- formatted_veg_df(static_location = \"C:/Users/Nathan.Roe/Documents/SEKI/CA792_veg_data.sqlite\") my_state_phase <- sites_in_state_phase(veg_df = veg_df) head(my_state_phase) #> $R022AB006CA #> $R022AB006CA$B006.1.1 #>     akfieldecositeid      vegplotid #> 1           B006.1.1  2012CA7922001 #> 22          B006.1.1  2012CA7921059 #> 41          B006.1.1  2012CA7921062 #> 60          B006.1.1  2013CA7928215 #> 76          B006.1.1  2013CA7928216 #> 93          B006.1.1  2014CA7928001 #> 109         B006.1.1  2013CA7927507 #> 124         B006.1.1  2013CA7927508 #> 141         B006.1.1  2013CA7927509 #> 155         B006.1.1  2014CA7921034 #> 169         B006.1.1  2013CA7921042 #> 192         B006.1.1  2013CA7921057 #> 209         B006.1.1  2013CA7921060 #> 222         B006.1.1  2013CA7925002 #> 235         B006.1.1  2013CA7925003 #> 241         B006.1.1  2013CA7925007 #> 257         B006.1.1  2013CA7925009 #> 272         B006.1.1  2015CA7926001 #> 288         B006.1.1 2015CA7923049N #> 298         B006.1.1 2015CA7923054N #> 305         B006.1.1 2015CA7923059N #> 316         B006.1.1  2015CA7923079 #> 322         B006.1.1  2015CA7923080 #> 331         B006.1.1  2015CA7921083 #> 345         B006.1.1  2015CA7925076 #> 347         B006.1.1  2015CA7920004 #>  #> $R022AB006CA$B006.1.3E #>   akfieldecositeid     vegplotid #> 1        B006.1.3E 2013CA7928214 #>  #> $R022AB006CA$B009.1.1 #>   akfieldecositeid     vegplotid #> 1         B009.1.1 2013CA7927511 #>  #> $R022AB006CA$B006.1.3A #>   akfieldecositeid     vegplotid #> 1        B006.1.3A 2013CA7925021 #>  #> $R022AB006CA$undefined #>   akfieldecositeid      vegplotid #> 1        undefined  2015CA7920006 #> 9        undefined 2016CA7925036N #>  #>  #> $R022AA102CA #> $R022AA102CA$A102.1.1 #>     akfieldecositeid      vegplotid #> 1           A102.1.1  2012CA7922002 #> 17          A102.1.1  2012CA7929002 #> 40          A102.1.1  2013CA7921043 #> 66          A102.1.1  2015CA7925068 #> 79          A102.1.1  2015CA7925071 #> 91          A102.1.1  2015CA7923077 #> 109         A102.1.1  2015CA7923078 #> 128         A102.1.1  2015CA7921064 #> 138         A102.1.1 2015CA7921065N #> 147         A102.1.1  2015CA7925061 #> 161         A102.1.1  2015CA7921082 #> 180         A102.1.1  2016CA7921005 #> 193         A102.1.1  2016CA7921042 #> 201         A102.1.1 2015CA7925059N #> 217         A102.1.1  2016CA7923018 #>  #> $R022AA102CA$A102.1.1M #>   akfieldecositeid     vegplotid #> 1        A102.1.1M 2013CA7927038 #>  #> $R022AA102CA$undefined #>    akfieldecositeid      vegplotid #> 1         undefined  2016CA7921021 #> 7         undefined  2016CA7921023 #> 16        undefined  2016CA7925034 #> 28        undefined  S2019CA107001 #> 41        undefined  2019CA7925020 #> 47        undefined  2020CA7921004 #> 61        undefined  2020CA7925002 #> 67        undefined  2020CA7925005 #> 86        undefined  2020CA7921006 #> 98        undefined 2020CA7925007N #>  #>  #> $F022AD103CA #> $F022AD103CA$D103.1.4F #>    akfieldecositeid     vegplotid #> 1         D103.1.4F 2012CA7922003 #> 31        D103.1.4F 2012CA7929003 #>  #> $F022AD103CA$D103.1.1 #>     akfieldecositeid      vegplotid #> 1           D103.1.1  2012CA7922009 #> 42          D103.1.1  2012CA7928011 #> 71          D103.1.1  2012CA7924011 #> 93          D103.1.1  2012CA7921061 #> 115         D103.1.1  2012CA7929005 #> 132         D103.1.1  2012CA7929009 #> 151         D103.1.1  2014CA7922011 #> 175         D103.1.1  S2014CA107007 #> 187         D103.1.1  2014CA7922045 #> 195         D103.1.1  2015CA7921031 #> 229         D103.1.1 2016CA7921018N #> 247         D103.1.1  2016CA7923044 #>  #> $F022AD103CA$D003.1.1 #>    akfieldecositeid     vegplotid #> 1          D003.1.1 2012CA7928004 #> 13         D003.1.1 2014CA7921064 #>  #> $F022AD103CA$undefined #>    akfieldecositeid      vegplotid #> 1         undefined  2014CA7925077 #> 6         undefined 2015CA7921100N #> 15        undefined  2016CA7921047 #> 18        undefined 2016CA7923032N #> 29        undefined  2019CA7921018 #>  #> $F022AD103CA$D103.1.3F #>    akfieldecositeid     vegplotid #> 1         D103.1.3F 2014CA7921030 #> 15        D103.1.3F 2014CA7921051 #> 41        D103.1.3F 2013CA7921033 #>  #> $F022AD103CA$D103.1.2F #>   akfieldecositeid     vegplotid #> 1        D103.1.2F 2014CA7922031 #>  #> $F022AD103CA$D003.1.3F #>   akfieldecositeid     vegplotid #> 1        D003.1.3F 2016CA7923046 #>  #>  #> $F022AD100CA #> $F022AD100CA$D100.1.2F #>   akfieldecositeid     vegplotid #> 1        D100.1.2F 2012CA7922004 #>  #> $F022AD100CA$D100.1.1 #>    akfieldecositeid     vegplotid #> 1          D100.1.1 2012CA7922007 #> 2          D100.1.1 2012CA7922008 #> 17         D100.1.1 2012CA7929010 #> 45         D100.1.1 2013CA7929901 #> 53         D100.1.1 2013CA7929102 #> 71         D100.1.1 2013CA7929109 #>  #> $F022AD100CA$D100.1.3F #>    akfieldecositeid     vegplotid #> 1         D100.1.3F 2012CA7921031 #> 16        D100.1.3F 2012CA7921065 #>  #> $F022AD100CA$D100.1.4F #>   akfieldecositeid     vegplotid #> 1        D100.1.4F 2012CA7929004 #>  #> $F022AD100CA$undefined #>    akfieldecositeid      vegplotid #> 1         undefined 2015CA7923082N #> 6         undefined 2016CA7921048N #> 8         undefined  2016CA7921050 #> 10        undefined  2016CA7923033 #> 18        undefined 2016CA7925044N #> 23        undefined  2019CA7925014 #> 27        undefined  2019CA7925017 #>  #>  #> $R022AD002CA #> $R022AD002CA$D003.1.1 #>   akfieldecositeid     vegplotid #> 1         D003.1.1 2012CA7922005 #>  #> $R022AD002CA$D002.1.1 #>     akfieldecositeid     vegplotid #> 1           D002.1.1 2012CA7922010 #> 40          D002.1.1 2012CA7924004 #> 61          D002.1.1 2012CA7921070 #> 84          D002.1.1 2014CA7922034 #> 108         D002.1.1 2014CA7922038 #> 121         D002.1.1 2013CA7927501 #> 147         D002.1.1 2014CA7921060 #> 159         D002.1.1 2015CA7923095 #> 176         D002.1.1 2015CA7923099 #> 196         D002.1.1 2016CA7921009 #> 207         D002.1.1 2015CA7925084 #>  #> $R022AD002CA$D002.1.3F #>   akfieldecositeid     vegplotid #> 1        D002.1.3F 2012CA7921064 #>  #> $R022AD002CA$undefined #>    akfieldecositeid      vegplotid #> 1         undefined  2014CA7925056 #> 4         undefined  2014CA7921013 #> 13        undefined  2014CA7921025 #> 23        undefined  2014CA7921039 #> 30        undefined 2014CA7921040N #> 41        undefined  2013CA7920002 #> 44        undefined 2015CA7921090N #> 53        undefined 2016CA7925012N #> 57        undefined 2016CA7925016N #> 61        undefined  2016CA7921039 #>  #> $R022AD002CA$D001.1.1 #>   akfieldecositeid     vegplotid #> 1         D001.1.1 2014CA7925086 #>  #> $R022AD002CA$D007.1.1 #>    akfieldecositeid      vegplotid #> 1          D007.1.1  2014CA7921052 #> 23         D007.1.1  2015CA7921032 #> 38         D007.1.1 2015CA7926014N #>  #> $R022AD002CA$B004.1.1 #>   akfieldecositeid     vegplotid #> 1         B004.1.1 2013CA7921064 #>  #> $R022AD002CA$D004.1.1 #>   akfieldecositeid     vegplotid #> 1         D004.1.1 2015CA7926020 #>  #>  #> $R022AD009CA #> $R022AD009CA$D009.1.1 #>    akfieldecositeid     vegplotid #> 1          D009.1.1 2012CA7922006 #> 28         D009.1.1 2013CA7927033 #> 49         D009.1.1 S2014CA107002 #> 59         D009.1.1 2014CA7921042 #> 71         D009.1.1 2014CA7921050 #> 81         D009.1.1 2014CA7922030 #>  #> $R022AD009CA$B001.1.1 #>    akfieldecositeid      vegplotid #> 1          B001.1.1  2012CA7928008 #> 28         B001.1.1  2012CA7929006 #> 52         B001.1.1 2015CA7921087N #>  #> $R022AD009CA$undefined #>    akfieldecositeid     vegplotid #> 1         undefined 2014CA7921041 #> 10        undefined 2017CA7921012 #> 17        undefined 2019CA7921015 #>  #> $R022AD009CA$D004.1.1 #>   akfieldecositeid     vegplotid #> 1         D004.1.1 2014CA7921043 #>  #> $R022AD009CA$D103.1.2F #>   akfieldecositeid     vegplotid #> 1        D103.1.2F 2014CA7922025 #>  #> $R022AD009CA$D009.1.1P #>   akfieldecositeid     vegplotid #> 1        D009.1.1P 2014CA7922027 #>  #>"},{"path":"https://natearoe.github.io/ecositer/reference/vegStaticNASIS.html","id":null,"dir":"Reference","previous_headings":"","what":"Create vegetation data Static NASIS — vegStaticNASIS","title":"Create vegetation data Static NASIS — vegStaticNASIS","text":"vegStaticNASIS saves NASIS selected set local drive. function utilizes soilDB::createStaticNASIS, includes appropriate tables access vegetation data. output can used reliable, local copy query results, allowing user change NASIS selected set still access data interest. file extension needs \".sqlite\" working dataset commonly new data entered, probably best work NASIS selected set rather using static, local sqlite database.","code":""},{"path":"https://natearoe.github.io/ecositer/reference/vegStaticNASIS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create vegetation data Static NASIS — vegStaticNASIS","text":"","code":"vegStaticNASIS(output_path)"},{"path":"https://natearoe.github.io/ecositer/reference/vegStaticNASIS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create vegetation data Static NASIS — vegStaticNASIS","text":"output_path","code":""},{"path":"https://natearoe.github.io/ecositer/reference/vegStaticNASIS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create vegetation data Static NASIS — vegStaticNASIS","text":"static NASIS database can called independent current selected set NASIS.","code":""},{"path":"https://natearoe.github.io/ecositer/reference/vegStaticNASIS.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create vegetation data Static NASIS — vegStaticNASIS","text":"appropriate queries run populate selected set include: MLRA13_Wasilla > Pedon/Site/Transect/Vegetation Plot usiteid (multiple) & MLRA13_Wasilla > Pedon/Site/Vegetation Plot site area overlap table Code written Andrew Brown","code":""},{"path":"https://natearoe.github.io/ecositer/reference/vegStaticNASIS.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create vegetation data Static NASIS — vegStaticNASIS","text":"","code":"if (FALSE) { vegStaticNASIS(output_path = \"C:/Users/Nathan.Roe/Documents/SEKI/CA792_veg.sqlite\") }"},{"path":"https://natearoe.github.io/ecositer/reference/veg_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce vegetation summary of ecosites and states/phases — veg_summary","title":"Produce vegetation summary of ecosites and states/phases — veg_summary","text":"veg_summary() takes properly formatted vegetation dataframe produces summaries vegetation ecosites states/phases. Vegetation data originates NASIS vegplot table. formatted_veg_df function used manipulate raw NASIS vegplot data properly formatted vegetation dataframe","code":""},{"path":"https://natearoe.github.io/ecositer/reference/veg_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce vegetation summary of ecosites and states/phases — veg_summary","text":"","code":"veg_summary(veg_df)"},{"path":"https://natearoe.github.io/ecositer/reference/veg_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce vegetation summary of ecosites and states/phases — veg_summary","text":"veg_df properly formatted vegetation dataframe","code":""},{"path":"https://natearoe.github.io/ecositer/reference/veg_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce vegetation summary of ecosites and states/phases — veg_summary","text":"nested list vegetation summaries ecosite state/phase","code":""},{"path":"https://natearoe.github.io/ecositer/reference/veg_summary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Produce vegetation summary of ecosites and states/phases — veg_summary","text":"veg_summary() function also runs Indicator Species Analysis (ISA) using multipatt function. Documentation function read understand ISA. Briefly, ISA determines whether species strong indicator community. determined multiplying percent abundance species occurs community interest (summed abundance community interest/summed abundance plots) percent plots within community interest species present (# plots community interest species present/total number plots assigned community interest). strong indicator majority abundance community interest appears majority plots associated community interest. ISA used determine indicator species ecosites states/phases. ISA interpretation notes: ISA determines relationship community every species occured community. ultimately reports p-value species community strongest relationship (lowest p-value.) Therefore, ISA p-values NA species strongly associated community. p-value reported, means species strongly associated community, even p-value high. P-values calculated using permutations data. ISA, manner applied , suffers dramatically fact numerous statistical tests run. running multiple statistical tests, modified critical p-value determined, using something like Bonferroni correction. example, 100 tests run resulting 100 different p-values, critical p-value adjusted 0.05/100 = .0005. situation, uncommon 1000s test, , calculated. reasonable modify critical p-value degree several reasons. result, ISA interpretted care. provides insight  relationship species sites/states/phases. Ecologists use expert knowledge along data provided summaries (ISA included) determine species representative ecosite/state/phase. function takes several minutes due computation related ISA.","code":""},{"path":"https://natearoe.github.io/ecositer/reference/veg_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Produce vegetation summary of ecosites and states/phases — veg_summary","text":"","code":"my_veg_summary <- veg_summary(veg_df = ecositer::vegetation_dataframe) head(my_summary) #> Error in eval(expr, envir, enclos): object 'my_summary' not found"}]
